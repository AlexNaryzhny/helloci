using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace HomeTask2
{
    class Taxopark
    {
        //	Спроектировать объектную модель для заданной предметной области.
        //    Использовать: классы, наследование, интерфейсы, полиморфизм, инкапсуляция. 
        //    Каждый класс, метод и переменная должны иметь исчерпывающее смысл название и информативный состав.
        //    Необходимо точно продумать, какие классы необходимы для решения задачи. 
        //    Наследование должно применяться только тогда, когда это имеет смысл. 
        //    Классы должны быть грамотно разложены по пакетам. 
        //    Работа с консолью или консольное меню должно быть минимальным 
        //    (только необходимые данные для ввода, выводить только то, что просится в условии задачи). 
        //    Задание представляет собой какую-то предметную область, в которой требуется выделить необходимую иерархию классов 
        //    и реализовать ее с помощью ООП (используя наследование, если необходимо или реализовывая интерфейсы). 
        //    В каждом классе должны быть поля и методы, которые вы посчитаете необходимыми. 
        //    Программа должна создавать объекты различных классов в выделенной предметной области,
        //    объединять их в какой-то набор объектов (использовать коллекции). 
        //    Как правило, задание требует выполнить поиск объектов по заданным критериям.
        //Определить иерархию легковых автомобилей. 
        //Создать таксопарк. 
        //Посчитать стоимость автопарка. 
        //Провести сортировку автомобилей парка по расходу топлива. 
        //Найти автомобиль в компании, соответствующий заданному диапазону параметров.

        private static void Main()
        {
            var coupe1 = new Coupe
            {
                model = "ferrari",
                expense = 20,
                price = 100000,
                countofdoors = 2,
                CountOfPassengers = 2,
                year = 2015
            };

            var sedan = new Sedan
            {
                year = 1985,
                Countofpassangers = 4,
                expense = 10,
                model = "vaz",
                price = 1000
            };

            var lt = new Minibus
            {
                Countofpassangers = 15,
                expense = 12,
                model = "vw",
                price = 5000,
                year = 2000
            };
            var maz = new HeavyCar {expense = 50, Gruzopodemnost = 50, model = "5442", price = 20000, year = 2005};


            var taxi = new List<Car> {coupe1, sedan, lt, maz};
            foreach (var car in taxi)
            {
                Console.WriteLine(car+" ");
            }
            Console.ReadKey();
        }


    }

}

